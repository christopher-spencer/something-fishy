"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureDependencies = void 0;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("../../../utils/versions");
function ensureDependencies(tree, options) {
    const dependencies = {
        tslib: versions_1.tslibVersion,
    };
    const devDeps = {
        // because the default jest-preset uses ts-jest,
        // jest will throw an error if it's not installed
        // even if not using it in overriding transformers
        'ts-jest': versions_1.tsJestVersion,
    };
    if (options.testEnvironment !== 'none') {
        devDeps[`jest-environment-${options.testEnvironment}`] = versions_1.jestVersion;
    }
    if (!options.js) {
        devDeps['ts-node'] = versions_1.tsNodeVersion;
        devDeps['@types/jest'] = versions_1.jestTypesVersion;
        devDeps['@types/node'] = versions_1.typesNodeVersion;
    }
    if (options.compiler === 'babel' || options.babelJest) {
        devDeps['babel-jest'] = versions_1.babelJestVersion;
        // in some cases @nx/js will not already be present i.e. node only projects
        devDeps['@nx/js'] = versions_1.nxVersion;
    }
    else if (options.compiler === 'swc') {
        devDeps['@swc/jest'] = versions_1.swcJestVersion;
    }
    return (0, devkit_1.addDependenciesToPackageJson)(tree, dependencies, devDeps);
}
exports.ensureDependencies = ensureDependencies;
